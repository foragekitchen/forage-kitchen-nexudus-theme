{% extends master.master %}
{% block title %}{% if data.Local.Resource != null %} {{ data.Local.Resource.Name }} | {% endif %}{% T Events and bookings %} | {{ data.Business.Name }}{% endblock %}
{% block content %}
<div id="wrapper">
    <!-- CONTAINER -->
    <div id="main" class="container">
        <!-- BREADCRUMB -->
        <ul class="breadcrumb">
            {% if data.Local.Resource == null %}
            <li class="active">{% T Events and bookings %}</li>
            {% else %}
            <li><a href="{% Url Bookings, Index %}">{% T Events and bookings %}</a> <span class="divider">/</span></li>
            <li class="active">{{ data.Local.Resource.Name }}</li>
            {% endif %}
        </ul>
        <!-- END BREADCRUMB -->
        <div class="row">
            <h2 class="page-title span12">
                {% if data.Local.Resource == null %}
                {% T Events and bookings calendar %}
                {% else %}
                {{ data.Local.Resource.Name }}
                {% endif %}
                <select id="resource-filter" class="pull-right hidden-phone" style="margin-top: 5px">
                    <option value="">{% T Show all resources %}</option>
                    {% for resource in data.Resources %}
                    {% if data.Local.Resource.Id == resource.Id %}
                    <option selected="selected" value="{{ resource.Id }}">{{ resource.Name }}</option>
                    {% else %}
                    <option value="{{ resource.Id }}">{{ resource.Name }}</option>
                    {% endif %}
                    {% endfor %}
                </select>
            </h2>

            <!-- CONTENT -->
            <section id="content" class="span12">
                {% if data.Coworker != null or data.Setting_Bookings_EnableGuestBookings %}
                <div class="alert alert-info fade in text-center">
                    <b>{% T Click on the calendar to request a booking. %}</b>
                </div>
                {% else %}
                <p>
                    <a class="btn btn-orange" href="{% Url Login, Index, lang: data.Language %}&returnUrl={{ data.URL }}">{% T Login to make a booking %}</a>
                </p>
                {% endif %}
                <div id="calendar" class="well"></div>
                <div class="row">
                    <div class="span9">
                        <span>{% T Legend %}:</span><br />
                        <a href="{% Url Bookings, Index, showAll: false %}"><span class="label" style="background: black">{% T Your bookings %}</span></a>
                        <span class="label" style="background: #a1a1a1">{% T Events %}</span>
                        <br />
                        {% for resource in data.Resources %}
                        <a href="{% Url Bookings, Index, resourceId: resource.Id %}"><span class="label resource" id="legend-resource-{{ resource.Id }}" style="background: lightgray">{{ resource.Name }}</span></a>
                        {% endfor %}
                    </div>
                    <div class="span3">
                        {% if data.Coworker != null or data.Setting_Bookings_EnableGuestBookings %}
                        <a onclick="createBooking(new Date())" class="btn btn-orange pull-right">{% T Make a booking %}</a>
                        {% else %}
                        <a class="btn btn-orange pull-right" href="{% Url Login, Index, lang: data.Language %}&returnUrl=/{{ data.Language }}/bookings">{% T Login to make a booking %}</a>
                        {% endif %}
                    </div>
                </div>

            </section>
            <!-- END CONTENT -->
        </div>
    </div>
    <!-- END CONTAINER -->
    {% include booking.htm %}
</div>

{% endblock %}
{% block script %}

<script>
    {% for resource in data.Resources %}
    $('#legend-resource-{{ resource.Id }}').css('background-color', getColurFromName('{{ resource.Name }}'));
    {% endfor %}
    $('#modal_unpaidbooking').modal();
    $('#Booking_Resource').prepend('<option></option>');

    var vm;
    var fc = $('#calendar').fullCalendar({
        lang: '{{ data.Language }}',
        allDaySlot: false,
        firstDay: 1,
        resources: [
          {% for resource in data.Resources %}
          {'id':{{ resource.Id }},'name':'{{ resource.Name }}'},
          {% endfor %}

          ],


        eventClick: function(calEvent, jsEvent, view) {
            if(calEvent.url)
                window.location = url;
            else if(calEvent.private) {
                showWarningMessage('{% T This is a booking made by another member of {0} ||  data.Business.Name %}');
                return false;
            }
            else
            {
                showBooking(calEvent);
                return false;
            }
        },
        dayClick: function(date, evData, jsEvent) {
            if(evData.data && evData.data.id)
                $('#Booking_Resource').val(evData.data.id);
            else
                $('#Booking_Resource').val(null);
            {% if data.Coworker != null %}
            createBooking(date.local().toDate());
            {% elseif data.Setting_Bookings_EnableGuestBookings %}
            createBooking(date.local().toDate());
            {% else %}
            showWarningMessage('{% T Login to make a booking %}');
            {% endif %}
        },
        defaultView: $(window).width() < 768 ? 'basicDay' : '{% if data.Local.Resource.Id > 0 %}agendaDay{% else %}resourceDay{% endif %}',
        editable: true,
        displayEventEnd: true,
        defaultDate: moment('{{ data.Local.CurrentDate | FormatDate: 'yyyy-MM-dd' }}'),
        header: {
            left:   $(window).width() >= 768 ? 'title' : null,
            center: $(window).width() < 768 ? 'basicDay' : 'month, agendaWeek, {% if data.Local.Resource.Id > 0 %}agendaDay{% else %}resourceDay{% endif %}',
            right:  'today prev,next'
        },
        eventSources: [
        {
            events: [
            {% for event in data.Local.Bookings %}
            {
                id: {{ event.Id }},
                resources: {{ event.Resource.Id }},
                title  : '{{ event.Resource.Name | Replace: "'", "\'" }}',
                startDate: '{{event.FromTime | Date: 'd'}}',
                endDate: '{{event.ToTime | Date: 'd'}}',
            startTime: '{{event.FromTime | Date: 't'}}',
            endTime: '{{event.ToTime | Date: 't'}}',
        start  : '{{event.FromTime | Date: 'yyyy' }}-{{ event.FromTime | Date: 'MM' }}-{{ event.FromTime | Date: 'dd' }}T{{ event.FromTime | Date: 'HH' }}:{{ event.FromTime | Date: 'mm' }}Z',
        end  : '{{ event.ToTime | Date: 'yyyy' }}-{{ event.ToTime  | Date: 'MM' }}-{{ event.ToTime  | Date: 'dd' }}T{{ event.ToTime  | Date: 'HH' }}:{{ event.ToTime  | Date: 'mm' }}Z',
        allDay : false,
    editable: false,
    ignoreTimezone: true,
    color: 'black'
    },
    {% endfor %}
    {% if data.Local.ShowAll and data.Local.ShowAllBookings %}
    {% for event in data.Local.AllBookings %}
    {
        private: true,
        resources: {{ event.Resource.Id }},
        title  : '{{ event.Resource.Name | Replace: "'", "\'" }}',
        start  : '{{ event.FromTime | Date: 'yyyy' }}-{{ event.FromTime | Date: 'MM' }}-{{ event.FromTime | Date: 'dd' }}T{{ event.FromTime | Date: 'HH' }}:{{ event.FromTime | Date: 'mm' }}Z',
        end  : '{{ event.ToTime | Date: 'yyyy' }}-{{ event.ToTime  | Date: 'MM' }}-{{ event.ToTime  | Date: 'dd' }}T{{ event.ToTime  | Date: 'HH' }}:{{ event.ToTime  | Date: 'mm' }}Z',
        allDay : false,
        editable: false,
        ignoreTimezone: true,
        color: getColurFromName('{{ event.Resource.Name }}')
    },
    {% endfor %}
    {% if data.Local.ShowAll %}
    {% if data.Local.Resource == null %}
    {% for event in data.Local.Events %}
    {
    private: true,
    url: '{% Url events, view, id: event.Id, title: event.Name | Clean %}',{% if event.Resource != null %}resources: {{ event.Resource.Id }},{% endif %}
    title  : '{{ event.Name | Replace: "'", "\'" }}',
    start  : '{{ event.StartDate | Date: 'yyyy' }}-{{ event.StartDate | Date: 'MM' }}-{{ event.StartDate | Date: 'dd' }}T{{ event.StartDate | Date: 'HH' }}:{{ event.StartDate | Date: 'mm' }}Z',
    end  : '{{ event.EndDate | Date: 'yyyy' }}-{{ event.EndDate | Date: 'MM' }}-{{ event.EndDate | Date: 'dd' }}T{{ event.EndDate | Date: 'HH' }}:{{ event.EndDate | Date: 'mm' }}Z',
    allDay : false,
    editable: true,
    ignoreTimezone: true
    },
    {% endfor %}
    {% endif %}
    {% endif %}
    {% endif %}
    {
        title  : 'BOT',
        start  : '1950-01-01T00:00:00',
        allDay : false // will make the time show
    }
    ]},
                            $.fullCalendar.gcalFeed('{% Setting Google.CalendarXmlFeed %}')
    ]
    });

    $(function () {

        var coeff = 1000 * 60 * 15;
        var originalToDate;
        var originalFromDate;

        //Resource filter
        $('#resource-filter').change(function(){
            var resourceId = $(this).val();
            window.location = '{% Url Bookings, Index %}?showAll={{data.Local.ShowAll}}&resourceid=' + resourceId;
        });

        //Initialize timepickers
        $("#Booking_From").datetimepicker({ viewSelect: 'year', pickerPosition: 'bottom-left', language: '{{ data.Language }}', format: "dd MM yyyy - HH:ii P", minuteStep: 15, showMeridian: true, autoclose: true, todayBtn: true, startDate: '+0d', startView: 1 });
        $("#Booking_To").datetimepicker({ viewSelect: 'year', pickerPosition: 'bottom-left', language: '{{ data.Language }}', format: "dd MM yyyy - HH:ii P", minuteStep: 15, showMeridian: true, autoclose: true, todayBtn: true, startDate: '+0d', startView: 1 });

        $("#Booking_From input").attr('readonly','readonly');
        $("#Booking_To input").attr('readonly','readonly');

        //If todate is > from date, move to date ahead
        $('#Booking_From').on('changeDate', function(){
            var fromDate = $('#Booking_From').datetimepicker('getDate');
            var toDate = $('#Booking_To').datetimepicker('getDate');

            //Round the date
            fromDate = new Date(Math.round(fromDate.getTime() / coeff) * coeff);
            $('#Booking_From').datetimepicker('setDate', fromDate);

            var diffInMinutes = moment.duration(moment(originalToDate).diff(originalFromDate)).asMinutes();
            if(diffInMinutes < 60) diffInMinutes = 60;

            var later = moment(fromDate).add(diffInMinutes, 'minutes').toDate();
            $('#Booking_To').datetimepicker('setDate',later);

            originalFromDate = fromDate;
            originalToDate = later;

            checkBooking();
        });

        //If todate is > from date, move from date back
        $('#Booking_To').on('changeDate', function(){
            var fromDate = $('#Booking_From').datetimepicker('getDate');
            var toDate = $('#Booking_To').datetimepicker('getDate');

            //Round the date
            toDate = new Date(Math.round(toDate.getTime() / coeff) * coeff);
            $('#Booking_To').datetimepicker('setDate',toDate);

            if(fromDate > toDate){
                $('#Booking_From').datetimepicker('setDate',toDate);
            }

            originalFromDate = fromDate;
            originalToDate = toDate;

            checkBooking();
        });

        $('#modal_booking form').on("submit", function(event) {
            var id = $('#booking_id').val();
            var url;
            if(id > 0)
                url = '{% Url Bookings, BookingJson %}';
            else
                url = '{% Url Bookings, NewBookingJson %}';

            var fromDateFormatted = moment($('#Booking_From').datetimepicker('getDate')).format('YYYY-MM-DD');
            var data = getBookingData();
            postAndClose(url, data, function(){ window.location = '{% Url Bookings, Index %}?date=' + fromDateFormatted; });
            event.preventDefault();
        });

        $('#delete-button').click(function () {
            if (confirm('{% T Cancel this booking? %}'))
            {
                var url = '{% Url Bookings, DeleteJson %}';
                var id = $('#booking_id').val();
                var fromDateFormatted = moment($('#Booking_From').datetimepicker('getDate')).format('YYYY-MM-DD');
                postAndClose(url, {id: id}, function(){ window.location = '{% Url Bookings, Index %}?date=' + fromDateFormatted; });
            }
            return false;
        });

        $('#Booking_Resource').attr('data-bind','event: { change: updateProducts }');

        var loadProducts = function(){
            var bid = $('#booking_id').val();
            var rid = $('#Booking_Resource').val();
            if(bid && bid > 0 && rid && rid > 0)
                return $.post('/en/bookings/GetResourceProducts?bookingId=' + bid + '&resourceId=' + rid);
            else
                return $.post('/en/bookings/GetResourceProducts?resourceId=' + $('#Booking_Resource').val());
        }
        var mapData = function(data){
            return vm.bookingProducts = ko.mapping.fromJS(data);
        }
        var updateData = function(data){
            return vm.bookingProducts = ko.mapping.fromJS(data, vm.bookingProducts);
        }
        var applyBindings = function() {
            return ko.applyBindings(vm);
        }
        var updateProducts = function(){
            $.when(loadProducts())
             .then(updateData)
             .then(checkBooking);
        }
        vm = {
            bookingProducts: ko.observableArray(),
            updateProducts: updateProducts,
            checkBooking: checkBooking
        };

        $.when(loadProducts())
         .then(mapData)
         .then(applyBindings)
    });

    function getColurFromName(str){
        // Generate a Hash for the String
        var hash = function(word) {
            var h = 0;
            for (var i = 0; i < word.length; i++) {
                h = word.charCodeAt(i) + ((h << 5) - h);
            }
            return h;
        };

        // Change the darkness or lightness
        var shade = function(color, prc) {
            var num = parseInt(color, 16),
                amt = Math.round(2.55 * prc),
                R = (num >> 16) + amt,
                G = (num >> 8 & 0x00FF) + amt,
                B = (num & 0x0000FF) + amt;
            return (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 +
                    (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 +
                    (B < 255 ? B < 1 ? 0 : B : 255))
              .toString(16)
              .slice(1);

        };
        // Convert init to an RGBA
        var int_to_rgba = function(i) {
            var color = ((i >> 24) & 0xFF).toString(16) +
                ((i >> 16) & 0xFF).toString(16) +
                ((i >> 8) & 0xFF).toString(16) +
                (i & 0xFF).toString(16);
            return color;
        };

        return '#' + shade(int_to_rgba(hash(str)), -10);
    }

</script>
{% endblock %}